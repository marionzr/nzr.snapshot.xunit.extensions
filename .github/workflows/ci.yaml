name: ci

# Trigger workflow on push to the 'main' branch
on:
  push:
    branches: [main]

jobs:
  # Job to handle version tagging
  tag-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Permission to write tag to the repo

    steps:
      - uses: actions/checkout@v2  # Checkout the repository code

      - name: Tag Version
        id: tag_version
        uses: anothrNick/github-tag-action@1.71.0  # GitHub action to auto-generate a version tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Token to authenticate with GitHub
          INITIAL_VERSION: 1.0.4  # Starting version
          DEFAULT_BUMP: patch  # Increment version by patch (e.g., 1.0.0 -> 1.0.1)

    # Output the new tag version for the next job
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      old_tag: ${{ steps.tag_version.outputs.old_tag }}

  # Job to package and publish the NuGet package
  package-and-publish:
    if: ${{ needs.tag-version.outputs.new_tag != '' && needs.tag-version.outputs.new_tag != needs.tag-version.outputs.old_tag }}
    runs-on: ubuntu-latest
    needs: tag-version  # Depends on the 'tag-version' job

    steps:
      - uses: actions/checkout@v2  # Checkout the repository code again

      - name: Setup .NET
        uses: actions/setup-dotnet@v1  # Setup .NET SDK
        with:
          dotnet-version: 8.0.x  # Use .NET 8 SDK

      - name: Restore Dependencies
        run: dotnet restore src/Nzr.Snapshot.Xunit.Extensions/

      - name: Build Project
        run: dotnet build src/Nzr.Snapshot.Xunit.Extensions/ --configuration Release

      - name: Generate NuGet Package
        run: |
          # Run the 'dotnet pack' command to create a NuGet package
          dotnet pack src/Nzr.Snapshot.Xunit.Extensions/ --configuration Release \
          -p:PackageVersion=${{ needs.tag-version.outputs.new_tag }} \
          -p:RepositoryUrl="https://github.com/marionzr/nzr.snapshot.xunit.extensions" \
          -o packages


      - name: Publish NuGet package
        run: |
          # Push the generated NuGet package to NuGet.org using the API key
          dotnet nuget push packages/*.nupkg --api-key ${{ secrets.NUGET_API_KEY_GITHUB_ACTIONS }} --source https://api.nuget.org/v3/index.json --skip-duplicate
